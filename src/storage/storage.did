type AssetArg = record {
  content_type : text;
  file_name : text;
  chunk_ids : vec nat;
  checksum : nat32;
  content_encoding : ContentEncoding;
};
type AssetQuery = record {
  id : nat;
  url : text;
  owner : principal;
  content_type : text;
  file_name : text;
  content_encoding : ContentEncoding;
};
type ChunkArg = record { content : vec nat8; order : nat32 };
type ContentEncoding = variant { GZIP; Identity };
service : () -> {
  asset_list : () -> (vec record { nat; AssetQuery }) query;
  chunk_availability_check : (vec nat) -> (bool) query;
  clear_expired_chunks : () -> ();
  commit_batch : (AssetArg) -> (nat);
  delete_asset : (nat) -> (bool);
  get_asset : (nat) -> (AssetQuery) query;
  insert_asset : () -> ();
  insert_chunk : () -> ();
  is_full : () -> (bool);
  upload_chunk : (ChunkArg) -> (nat);
}